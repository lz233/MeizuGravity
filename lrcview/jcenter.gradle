apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'lrcview'

    publishedGroupId = 'me.wcy'
    artifact = 'lrcview'

    libraryName = 'lrcview'
    libraryVersion = "2.2"
    libraryDescription = 'A lyric view on Android'

    siteUrl = 'https://github.com/wangchenyan/LrcView'
    gitUrl = 'https://github.com/wangchenyan/LrcView.git'

    developerId = 'wangchenyan'
    developerName = 'wcy'
    developerEmail = '919247701@qq.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

// Maven Group ID for the artifact
group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options {
        encoding 'utf-8'
        charSet 'utf-8'
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            // gpg {
            //     sign = true //Determines whether to GPG sign the files. The default is false
            //     passphrase = properties.getProperty("bintray.gpg.password")
            //     //Optional. The passphrase for GPG signing'
            // }
        }
    }
}

project.afterEvaluate {
    Task clean = tasks.getByPath("clean")
    Task install = tasks.getByPath("install")
    Task bintrayUpload = tasks.getByPath("bintrayUpload")
    install.mustRunAfter(clean)
    bintrayUpload.mustRunAfter(install)
}

task jcenter {
    dependsOn("clean")
    dependsOn("install")
    dependsOn("bintrayUpload")
}
