import java.nio.file.Paths

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "moe.lz233.meizugravity.cloudmusic"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/**'
        exclude 'kotlin/**'
        exclude 'okhttp3/**'
        exclude 'org/**'
        exclude '**.properties'
        exclude '**.bin'
        exclude 'lib/arm64-v8a/**'
        exclude 'lib/x86_64/**'
    }
}

/*tasks.whenTaskAdded { task ->
    if (task.name == 'processReleaseResources') {
        task.finalizedBy optimizeReleaseRes
    }
}*/

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation project(':lrcview')

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.5'

    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'
    implementation 'com.google.zxing:core:3.4.0'
    //2.6.4
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.4'
    //3.12.13
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    //fuck 4.4 https://stackoverflow.com/a/59346159/40013
    implementation 'org.conscrypt:conscrypt-android:2.2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'commons-codec:commons-codec:20041127.091804'
}

//https://github.com/LSPosed/LSPosed/blob/02b4ba01d83735d4a7db60ae4fc35c57ebc2d07c/app/build.gradle#L84
def optimizeReleaseRes = task('optimizeReleaseRes').doLast {
    def aapt2 = Paths.get(project.android.sdkDirectory.path, 'build-tools', project.android.buildToolsVersion, 'aapt2')
    def zip = Paths.get(project.buildDir.path, 'intermediates',
            'processed_res', 'release', 'out', "resources-release.ap_")
    def optimized = new File("${zip}.opt")
    def cmd = exec {
        commandLine aapt2, 'optimize', '--collapse-resource-names',
                '--shorten-resource-paths',
                '-o', optimized, zip
        ignoreExitValue false
    }
    if (cmd.exitValue == 0) {
        delete(zip)
        optimized.renameTo("$zip")
    }
}